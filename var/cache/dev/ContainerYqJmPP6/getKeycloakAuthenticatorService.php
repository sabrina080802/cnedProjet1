<?php

namespace ContainerYqJmPP6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getKeycloakAuthenticatorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Security\KeycloakAuthenticator' shared autowired service.
     *
     * @return \App\Security\KeycloakAuthenticator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authenticator/AuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authenticator/AbstractAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/knpuniversity/oauth2-client-bundle/src/Security/Helper/FinishRegistrationBehavior.php';
        include_once \dirname(__DIR__, 4).'/vendor/knpuniversity/oauth2-client-bundle/src/Security/Helper/PreviousUrlHelper.php';
        include_once \dirname(__DIR__, 4).'/vendor/knpuniversity/oauth2-client-bundle/src/Security/Helper/SaveAuthFailureMessage.php';
        include_once \dirname(__DIR__, 4).'/vendor/knpuniversity/oauth2-client-bundle/src/Security/Authenticator/OAuth2Authenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/EntryPoint/AuthenticationEntryPointInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Security/KeycloakAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/knpuniversity/oauth2-client-bundle/src/Client/ClientRegistry.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        if (isset($container->privates['App\\Security\\KeycloakAuthenticator'])) {
            return $container->privates['App\\Security\\KeycloakAuthenticator'];
        }

        return $container->privates['App\\Security\\KeycloakAuthenticator'] = new \App\Security\KeycloakAuthenticator(($container->services['knpu.oauth2.registry'] ?? ($container->services['knpu.oauth2.registry'] = new \KnpU\OAuth2ClientBundle\Client\ClientRegistry($container, ['keycloak' => 'knpu.oauth2.client.keycloak']))), $a, ($container->services['router'] ?? $container->getRouterService()));
    }
}
