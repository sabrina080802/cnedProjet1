<?php

namespace ContainerLObryz0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getKnpu_Oauth2_Provider_KeycloakService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'knpu.oauth2.provider.keycloak' shared service.
     *
     * @return \Stevenmaguire\OAuth2\Client\Provider\Keycloak
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-client/src/Tool/ArrayAccessorTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-client/src/Tool/GuardedPropertyTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-client/src/Tool/QueryBuilderTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-client/src/Provider/AbstractProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-client/src/Tool/BearerAuthorizationTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/stevenmaguire/oauth2-keycloak/src/Provider/Keycloak.php';

        return $container->privates['knpu.oauth2.provider.keycloak'] = ($container->privates['knpu.oauth2.provider_factory'] ?? $container->load('getKnpu_Oauth2_ProviderFactoryService'))->createProvider('Stevenmaguire\\OAuth2\\Client\\Provider\\Keycloak', ['clientId' => $container->getEnv('KEYCLOAK_CLIENTID'), 'clientSecret' => $container->getEnv('KEYCLOAK_SECRET'), 'authServerUrl' => $container->getEnv('KEYCLOAK_APP_URL'), 'realm' => 'mediatekformation', 'encryptionAlgorithm' => NULL, 'encryptionKeyPath' => NULL, 'encryptionKey' => NULL], 'oauth_check', [], []);
    }
}
